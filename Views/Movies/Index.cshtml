@model MvcMovie.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="py-5 text-center bg-light rounded-3 mb-4">
    <div class="container">
    <h1 class="display-4 fw-bold mb-3" style="line-height:1.1;">Movies Collection</h1>
     <p class="lead mb-4 text-secondary" style="font-weight: 400; line-height:1.5;">Browse, manage, and add your favorite movies</p>
     <a asp-action="Create" class="btn btn-dark btn-lg px-5 py-2" style="min-width: 130px;">Create New</a>
</div>
    </div>
<form asp-controller="Movies" asp-action="Index" method="get" class="mb-4 p-3 bg-light">
  <div class="row g-2 align-items-center">
    <div class="col-auto" style="min-width: 160px;">
      <label for="MovieGenre" class="visually-hidden">Genre</label>
      <select asp-for="MovieGenre" asp-items="Model.Genres" class="form-select" id="MovieGenre">
        <option value="">All Genres</option>
      </select>
    </div>
    <div class="col">
      <label for="searchText" class="visually-hidden">Search Title</label>
      <input type="text" asp-for="SearchString" class="form-control" id="searchText" placeholder="Search Title" />
    </div>
<div class="filter-buttons col-auto d-grid gap-2 d-md-flex">
              <button type="submit" class="btn btn-primary" id="filterBtn" disabled>Filter</button>
      <button type="button" class="btn btn-secondary" id="clearBtn" disabled>Clear filters</button>
    </div>
  </div>
</form>
@if (Model.Movies == null || !Model.Movies.Any())
{
    <div class="alert alert-dark text-center fw-bold my-4 me-2">
        Sorry, no movies found matching the criteria :(
    </div>
}
else {
<div class="table-responsive rounded-3">
<table class="table table-striped table-hover align-middle mb-0">
    <thead >
                <tr >
            <th >
                @Html.DisplayNameFor(model => model.Movies![0].Title)
                            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
                            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Genre)
                            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Price)
                            </th>
                            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Rating)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies!)
        {
        <tr class="table-row-hover ">
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td >
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td >
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td class="price-cell">
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
            <td >
              <div class="adaptive-buttons d-flex justify-content-center gap-2 flex-wrap">
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-dark" title="Edit">
                        <i class="fa-solid fa-pen-to-square"></i> <span class="d-none d-sm-inline">Edit</span>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Details">
                        <i class="fa-solid fa-circle-info"></i> <span class="d-none d-sm-inline">Details</span>
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Delete">
                        <i class="fa-solid fa-trash"></i> <span class="d-none d-sm-inline">Delete</span>
                    </a>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>
</div>
}

@section Scripts {
   <script>
        function checkFilterButton() {
            var searchText = document.getElementById('searchText').value.trim();
            var genreSelect = document.getElementById('MovieGenre');
            var filterBtn = document.getElementById('filterBtn');
            var clearBtn = document.getElementById('clearBtn');
            var hasFilter = (genreSelect.value !== '' || searchText !== '');

            filterBtn.disabled = !hasFilter;
            clearBtn.disabled = !hasFilter;
        }

        document.addEventListener('DOMContentLoaded', () => {
            checkFilterButton();

            document.getElementById('searchText').addEventListener('input', checkFilterButton);
            document.getElementById('MovieGenre').addEventListener('change', checkFilterButton);

            document.getElementById('clearBtn').addEventListener('click', () => {
                document.getElementById('searchText').value = '';
                document.getElementById('MovieGenre').value = '';
                document.forms[0].submit();
            });
        });
    </script>
}
